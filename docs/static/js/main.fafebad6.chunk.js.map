{"version":3,"sources":["server/Server.js","components/LoginScreen.js","components/TarjetaCliente.js","components/AgendarCita.js","components/AsignarTerapia.js","components/CobrarCitas.js","components/AddClienteForm.js","components/ClienteTable.js","components/EditClienteForm.js","components/crud/ClienteScreen.js","components/AddTerapeutaForm.js","components/EditTerapeuta.js","components/TerapeutaTable.js","components/crud/TerapeutaScreen.js","components/TarjetaClienteDatos.js","components/GestionClientes.js","components/TarjetaCita.js","components/TarjetaObservacion.js","components/GestionSesiones.js","components/ui/NavBar.js","routers/DashboarRoutes.js","routers/AppRouter.js","MasterApp.js","index.js"],"names":["SERVER","LoginScreen","history","useState","cedula","contrasena","inputValue","setInputValue","handleInputChange","e","target","name","value","className","type","placeholder","onChange","onClick","preventDefault","console","log","axios","get","params","clave","email","then","res","data","identificador","localStorage","setItem","JSON","stringify","replace","alert","TarjetaCliente","cliente","nombre","telefono","AgendarCita","id","direccion","ocupacion","setCliente","terapias","setTerapias","terapeutas","setTerapeutas","terapia","fecha","hora","terapeuta","setValues","visualCliente","setVisualCliente","visualForm","setVisualForm","handleValues","useEffect","onSubmit","fechaEntrada","idTerapia","map","key","usuario","parse","getItem","post","idCliente","idSecretario","idTerapeuta","window","location","reload","catch","err","AsignarTerapia","status","CobrarCitas","idCita","nonmbreCliente","fechaInicial","horaInicio","fechaFinal","horaFinal","estadoPago","citas","setCitas","handleCobro","put","length","class","scope","cita","index","nombreTerapia","nombreProfesional","AddClienteForm","props","useForm","register","errors","handleSubmit","addCliente","reset","ref","required","message","ClienteTable","clientes","deleteCliente","editRow","colSpan","EditClienteForm","updateCliente","currentCliente","defaultValues","setValue","ClienteScreen","listarClientes","setClientes","editing","setEditing","setCurrentCliente","fecha_nacimiento","delete","AddTerapeutaForm","addTerapeuta","profesion","EditTerapeuta","updateTerapeuta","currentTerapeuta","TerapeutaTable","deleteTerapeuta","TerapeutaScreen","listarTerapeutas","setCurrentTerapeuta","TarjetaClienteDatos","mostrarCliente","GestionClientes","fechaNacimiento","clienteActual","setClienteActual","visualDatos","setVisuaalDatos","obtenerCitas","TarjetaCita","mostrarCita","nombreCliente","TarjetaObservacion","observacion","GestionSesiones","observaciones","setObservaciones","citaActual","setCitaActual","visualObservaciones","setVisualObservaciones","listarObservaciones","Navbar","isSecretario","activeClassName","exact","to","DashboarRoutes","path","component","AppRouter","MasterApp","ReactDOM","render","document","getElementById"],"mappings":"kTACaA,EAAS,mDCITC,EAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EAEFC,mBAAS,CACzCC,OAAQ,GACRC,WAAY,KAJsB,mBAE/BC,EAF+B,KAEnBC,EAFmB,KAQhCC,EAAoB,SAACC,GACvBF,EAAc,2BACPD,GADM,kBAERG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAmClC,OACI,oCACI,yBAAKC,UAAU,cACX,yBAAKA,UAAU,QACX,0BAAOA,UAAU,cACb,2BAAOC,KAAK,OAAOC,YAAY,SAASJ,KAAK,aAAaK,SAAUR,IACpE,2BAAOM,KAAK,WAAWC,YAAY,QAAQJ,KAAK,SAASK,SAAUR,IACnE,4BAAQS,QAtCR,SAACR,GAEjBA,EAAES,iBACFC,QAAQC,IAAId,EAAWF,OAAOE,EAAWD,YACzCgB,IAAMC,IAAN,UAAatB,EAAb,SAA4B,CACxBuB,OAAO,CACJC,MAAOlB,EAAWF,OAClBqB,MAAOnB,EAAWD,cAIxBqB,MAAK,SAAAC,IAE4B,GAA3BA,EAAIC,KAAKC,eAERC,aAAaC,QAAQ,UAAUC,KAAKC,UAAUN,EAAIC,OACrB,GAA1BD,EAAIC,KAAKC,cACR3B,EAAQgC,QAAQ,cAEhBhC,EAAQgC,QAAQ,qBAKpBC,MAAM,2CAcE,uBCxDXC,EAAiB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACI,oCACI,yBAAKxB,UAAU,sBACX,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAc,WAAWwB,EAAQC,QAC/C,wBAAIzB,UAAU,cAAc,WAAWwB,EAAQjC,QAC/C,wBAAIS,UAAU,cAAc,aAAawB,EAAQE,cCJxDC,EAAc,WAAM,MAQCrC,mBAC1B,CACIsC,GAAI,GACJrC,OAAQ,GACRsC,UAAW,GACXjB,MAAO,GACPa,OAAQ,GACRK,UAAW,GACXJ,SAAU,KAhBW,mBAQtBF,EARsB,KAQbO,EARa,OAoBGzC,mBAAS,CACrC,CACIsC,GAAI,KACJH,OAAQ,gBAvBa,mBAoBtBO,EApBsB,KAoBZC,EApBY,OA2BO3C,mBAAS,CACzC,CACIsC,GAAI,KACJH,OAAQ,gBA9Ba,mBA2BtBS,EA3BsB,KA2BVC,EA3BU,OAkCF7C,mBACvB,CACIC,OAAQ,GACR6C,QAAS,GACTC,MAAO,GACPC,KAAM,GACNC,UAAW,KAxCU,mBAkCtBxC,EAlCsB,KAkCfyC,EAlCe,OA4CalD,oBAAS,GA5CtB,mBA4CtBmD,EA5CsB,KA4CPC,EA5CO,OA6COpD,oBAAS,GA7ChB,mBA6CtBqD,EA7CsB,KA6CVC,EA7CU,KAgDvBC,EAAe,SAACjD,GAElB4C,EAAU,2BACHzC,GADE,kBAEJH,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAKlC+C,qBAAU,WAGNtC,IAAMC,IAAN,UAAatB,EAAb,aACK0B,MAAK,SAAAC,GACFmB,EAAYnB,EAAIC,WAIzB,IAwEH,OACI,oCACI,yBAAKf,UAAU,aAEX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cAEX,0BAAM+C,SA7EF,SAACnD,GAErBA,EAAES,iBACFG,IAAMC,IAAI,UAAGtB,EAAH,mBAA6BY,EAAMR,QACxCsB,MAAK,SAAAC,GAEFiB,EAAWjB,EAAIC,MACf6B,GAAc,GACdF,GAAiB,QAsEL,yCACA,2BAAOzC,KAAK,OACRH,KAAK,SACLK,SAAU0C,EACV9C,MAAOA,EAAMR,SAEjB,4BAAQU,KAAK,UAAb,mBAGAwC,EAEI,6BACI,kBAAC,EAAD,CAAgBjB,QAASA,KAKzB,+BAQhB,yBAAKxB,UAAU,cAGP2C,EAEI,6BACI,0BAAMI,SA5FX,SAACnD,GAGxBA,EAAES,iBACFG,IAAMC,IAAN,UAAatB,EAAb,yBAA2C,CACvCuB,OAAO,CACHsC,aAAcjD,EAAMsC,MACpBY,UAAWlD,EAAMqC,WAGxBvB,MAAK,SAAAC,GAGFqB,EAAcrB,EAAIC,WAgFU,0CACA,4BAAQjB,KAAK,UAAUC,MAAOA,EAAMqC,QAASjC,SAAU0C,GAE/Cb,EAASkB,KAAI,SAACd,GACV,OAAO,4BAAQe,IAAKf,EAAQR,GAAI7B,MAAOqC,EAAQR,IAAKQ,EAAQX,YAMxE,+CACA,yBAAKzB,UAAU,kBACX,yBAAKA,UAAU,UACX,2BAAOA,UAAU,eACbC,KAAK,iBACLF,MAAOA,EAAMsC,MACbT,GAAG,+BACH9B,KAAK,QACLK,SAAU0C,MAUtB,2DAIJ,yDACA,4BAAQ/C,KAAK,YAAYC,MAAOA,EAAMwC,UAAWpC,SAAU0C,GAGnDX,EAAWgB,KAAI,SAACX,GACZ,OAAO,4BAAQY,IAAKZ,EAAUX,GAAI7B,MAAOwC,EAAUX,IAAKW,EAAUd,YAK9E,4BAAQrB,QAlHpB,WAEhB,IAAMgD,EAAUjC,KAAKkC,MAAMpC,aAAaqC,QAAQ,YAGhD9C,IAAM+C,KAAN,UAAcpE,EAAd,QACS,CACGkD,MAAOtC,EAAMsC,MACbmB,UAAWhC,EAAQI,GACnB6B,aAAcL,EAAQxB,GACtB8B,YAAa3D,EAAMwC,UACnBU,UAAUlD,EAAMqC,UAG7BvB,MAAK,SAASC,GAEbQ,MAAM,yBAENqC,OAAOC,SAASC,QAAO,MAKxBC,OAAM,SAASC,GACdzD,QAAQC,IAAIwD,QA0FgB,iBAKA,mCCnOvBC,EAAiB,WAAO,IAAD,EAEA1E,mBAAS,CACrC,CACIsC,GAAI,KACJH,OAAQ,gBALgB,mBAEzBO,EAFyB,KAEfC,EAFe,OASI3C,mBAAS,CACzC,CACIsC,GAAI,KACJH,OAAQ,gBAZgB,mBASzBS,EATyB,KASbC,EATa,OAgBL7C,mBACvB,CACI8C,QAAS,GACTG,UAAW,KAnBa,mBAgBzBxC,EAhByB,KAgBlByC,EAhBkB,KAuB1BK,EAAe,SAACjD,GAElB4C,EAAU,2BACHzC,GADE,kBAEJH,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAKlC+C,qBAAU,WAENtC,IAAMC,IAAN,UAAatB,EAAb,aACK0B,MAAK,SAAAC,GACFmB,EAAYnB,EAAIC,SAIxBP,IAAMC,IAAN,UAAatB,EAAb,eACC0B,MAAK,SAAAC,GACFqB,EAAcrB,EAAIC,WAIvB,IAyBH,OACI,6BACI,yBAAKf,UAAU,aACX,mDACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cAEX,0BAAM+C,SA9BF,SAACnD,GAErBA,EAAES,iBACFG,IAAM+C,KAAN,UAAcpE,EAAd,uBAA0C,CACtCuE,YAAY3D,EAAMwC,UAClBU,UAAUlD,EAAMqC,UAGnBvB,MAAK,SAAAC,GAEFR,QAAQC,IAAIO,EAAImD,QACE,MAAfnD,EAAImD,OAEH3C,MAAM,yBAENA,MAAM,uBAgBM,0CACA,4BAAQxB,KAAK,UAAUC,MAAOA,EAAMqC,QAASjC,SAAU0C,GAI/Cb,EAASkB,KAAI,SAACd,GACV,OAAO,4BAAQe,IAAKf,EAAQR,GAAI7B,MAAOqC,EAAQR,IAAKQ,EAAQX,WAGpE,4BAAQ1B,OAAQ,GAAhB,SAGJ,4CACA,4BAAQD,KAAK,YAAYC,MAAOA,EAAMwC,UAAWpC,SAAU0C,GAEnDX,EAAWgB,KAAI,SAACX,GACZ,OAAO,4BAAQY,IAAKZ,EAAUX,GAAI7B,MAAOwC,EAAUX,IAAKW,EAAUd,YAM9E,6CAKR,yBAAKzB,UAAU,mBC1GtBkE,EAAc,WAAO,IAAD,EAGH5E,mBAAS,CAC/B,CACI6E,OAAQ,GACRC,eAAgB,GAChBC,aAAc,GACdC,WAAY,GACZC,WAAY,GACZC,UAAW,GACXC,WAAY,MAXS,mBAGtBC,EAHsB,KAGfC,EAHe,KAe7B7B,qBAAU,WAENtC,IAAMC,IAAN,UAAatB,EAAb,UACK0B,MAAK,SAAAC,GACF6D,EAAS7D,EAAIC,WAItB,IAEH,IASM6D,EAAc,SAACT,GAGjB3D,IAAMqE,IAAI,UAAG1F,EAAH,eAAyBgF,GAC9BtD,MAAK,SAAAC,GAXVN,IAAMC,IAAN,UAAatB,EAAb,UACK0B,MAAK,SAAAC,GACF6D,EAAS7D,EAAIC,aAgBzB,OACI,6BAEQ2D,EAAMI,OAAS,EACX,2BAAOC,MAAM,SAGT,2BAAOA,MAAM,cACT,4BACI,wBAAIC,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,WAGR,+BAGQN,EAAMxB,KAAI,SAAC+B,EAAMC,GACb,OAAQ,4BACJ,wBAAIF,MAAM,OAAO,EAAIE,GACrB,4BAAKD,EAAKE,eACV,4BAAKF,EAAKG,mBACV,4BAAKH,EAAKZ,aAAe,IAAMY,EAAKX,YACpC,4BAE4B,IAApBW,EAAKR,WACD,4BAAQzE,UAAU,iBAAiBI,QAAS,kBAAMwE,EAAYK,EAAKd,UAAnE,UAEI,4BAAQnE,UAAU,mBAAlB,eAehC,8C,QC1FXqF,EAAiB,SAACC,GAAW,IAAD,cAEEC,cAAhCC,EAF8B,EAE9BA,SAASC,EAFqB,EAErBA,OAAOC,EAFc,EAEdA,aAOvB,OACI,6BACI,0BAAM3C,SAAY2C,GAPT,SAAC3E,EAAKnB,GACnB0F,EAAMK,WAAW5E,GAEjBnB,EAAEC,OAAO+F,YAKD,yCACA,2BAAO3F,KAAK,OAAOH,KAAK,SAAS+F,IAC7BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQlG,cADb,aACK,EAAgBwG,SAErB,4CACA,2BAAO9F,KAAK,OAAOH,KAAK,YAAY+F,IAChCL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ5D,iBADb,aACK,EAAmBkE,SAGxB,wCACA,2BAAO9F,KAAK,OAAOH,KAAK,QAAQ+F,IAC5BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ7E,aADb,aACK,EAAemF,SAGpB,yCACA,2BAAO9F,KAAK,OAAOH,KAAK,SAAS+F,IAC7BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQhE,cADb,aACK,EAAgBsE,SAGrB,4CACA,2BAAO9F,KAAK,OAAOH,KAAK,YAAY+F,IAChCL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ3D,iBADb,aACK,EAAmBiE,SAGxB,2CACA,2BAAO9F,KAAK,OAAOH,KAAK,WAAW+F,IAC/BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ/D,gBADb,aACK,EAAkBqE,SAIvB,sDC1EHC,EAAe,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAASC,EAA4B,EAA5BA,cAAcC,EAAc,EAAdA,QACpD,OACE,6BACE,+BACE,+BACE,4BACE,sCACA,yCACA,qCACA,sCACA,yCACA,wCACA,0CAGJ,+BAEIF,EAASnB,OAAS,EAChBmB,EAAS/C,KAAI,SAAA1B,GAAO,OAEhB,wBAAI2B,IAAK3B,EAAQI,IACjB,4BAAKJ,EAAQjC,QACb,4BAAKiC,EAAQK,WACb,4BAAKL,EAAQZ,OACb,4BAAKY,EAAQC,QACb,4BAAKD,EAAQM,WACb,4BAAKN,EAAQE,UACb,4BACE,4BACE1B,UAAU,sBACVI,QAAS,WAAM+F,EAAQ3E,KAFzB,UAIA,4BACExB,UAAU,sBACVI,QAAS,WAAO8F,EAAc1E,EAAQI,MAFxC,iBAUJ,4BACE,wBAAIwE,QAAS,GAAb,iBC1CLC,EAAkB,SAAC,GAAoC,IAAD,YAAlCC,EAAkC,EAAlCA,cAAcC,EAAoB,EAApBA,eAAoB,EAEfhB,YAAQ,CACpDiB,cAAeD,IADZf,EAFwD,EAExDA,SAASC,EAF+C,EAE/CA,OAAOC,EAFwC,EAExCA,aAAae,EAF2B,EAE3BA,SAKpCA,EAAS,SAAUF,EAAehH,QAClCkH,EAAS,YAAYF,EAAe1E,WACpC4E,EAAS,QAASF,EAAe3F,OACjC6F,EAAS,SAASF,EAAe9E,QACjCgF,EAAS,YAAaF,EAAezE,WACrC2E,EAAS,WAAWF,EAAe7E,UAOnC,OACI,6BACI,0BAAMqB,SAAY2C,GAPT,SAAC3E,EAAKnB,GACnB0G,EAAcC,EAAe3E,GAAGb,GAEhCnB,EAAEC,OAAO+F,YAMD,yCACA,2BAAO3F,KAAK,OAAOH,KAAK,SAAS+F,IAC7BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQlG,cADb,aACK,EAAgBwG,SAGrB,4CACA,2BAAO9F,KAAK,OAAOH,KAAK,YAAY+F,IAChCL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ5D,iBADb,aACK,EAAmBkE,SAGxB,wCACA,2BAAO9F,KAAK,OAAOH,KAAK,QAAQ+F,IAC5BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ7E,aADb,aACK,EAAemF,SAGpB,yCACA,2BAAO9F,KAAK,OAAOH,KAAK,SAAS+F,IAC7BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQhE,cADb,aACK,EAAgBsE,SAGrB,4CACA,2BAAO9F,KAAK,OAAOH,KAAK,YAAY+F,IAChCL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ3D,iBADb,aACK,EAAmBiE,SAGxB,2CACA,2BAAO9F,KAAK,OAAOH,KAAK,WAAW+F,IAC/BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ/D,gBADb,aACK,EAAkBqE,SAEvB,qDC7EHW,G,MAAgB,WAIzB5D,qBAAU,WAEN6D,MAED,IAR4B,MAUCrH,mBAAS,CACrC,CAAEsC,GAAI,GACFrC,OAAQ,GACRsC,UAAW,GACXjB,MAAO,GACPa,OAAQ,GACRK,UAAW,GACXJ,SAAU,MAjBa,mBAUxBuE,EAVwB,KAUdW,EAVc,KAsBzBD,EAAiB,WAGnBnG,IAAMC,IAAN,UAAatB,EAAb,aACC0B,MAAK,SAAAC,GAEF8F,EAAY9F,EAAIC,MAChBT,QAAQC,IAAIO,EAAIC,UA7BO,EAoFDzB,oBAAS,GApFR,mBAoFxBuH,EApFwB,KAoFfC,EApFe,OAqFaxH,mBAAS,CACjDsC,GAAI,KAAMrC,OAAQ,GAAIsC,UAAW,GAAIjB,MAAO,GAAIa,OAAQ,GAAIK,UAAW,GAAIJ,SAAU,KAtF1D,mBAqFxB6E,EArFwB,KAqFRQ,EArFQ,KA2H/B,OACI,6BACI,yBAAK/G,UAAU,aACX,mDACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cAEP6G,EACI,6BACI,8CACA,kBAAC,EAAD,CACIP,cAtCd,SAAC1E,EAAI0E,GACvBQ,GAAW,GAEXtG,IAAMqE,IAAI,UAAG1F,EAAH,aAAqByC,EACtB,CACGrC,OAAQ+G,EAAc/G,OACtBsC,UAAWyE,EAAczE,UACzBjB,MAAO0F,EAAc1F,MACrBoG,iBAAkB,aAClBvD,aAAc,EACdhC,OAAQ6E,EAAc7E,OACtBK,UAAUwE,EAAcxE,UACxBJ,SAAU4E,EAAc5E,WAIrCb,MAAK,SAASC,GAEb6F,OAGD7C,OAAM,SAASC,GACdzD,QAAQC,IAAIwD,OAiBoBwC,eAAgBA,KAIpB,6BACI,+CACA,kBAAC,EAAD,CAAgBZ,WAxGjC,SAACnE,GAEhB,IAAM4B,EAAUjC,KAAKkC,MAAMpC,aAAaqC,QAAQ,YAChD9C,IAAM+C,KAAN,UAAcpE,EAAd,YACS,CACGI,OAAQiC,EAAQjC,OAChBsC,UAAWL,EAAQK,UACnBjB,MAAOY,EAAQZ,MACfoG,iBAAkB,aAClBvD,aAAcL,EAAQxB,GACtBH,OAAQD,EAAQC,OAChBK,UAAUN,EAAQM,UAClBJ,SAAUF,EAAQE,WAI/Bb,MAAK,SAASC,GAEb6F,OAGD7C,OAAM,SAASC,GACdzD,QAAQC,IAAIwD,WA0FA,yBAAK/D,UAAU,cACX,wCACA,kBAAC,EAAD,CACIiG,SAAUA,EACVC,cAxFF,SAAAtE,GAElBpB,IAAMyG,OAAO,UAAG9H,EAAH,aAAqByC,GAGnCf,MAAK,SAASC,GAEb6F,OAID7C,OAAM,SAASC,GACdzD,QAAQC,IAAIwD,OA6EQoC,QAjER,SAAC3E,GACbsF,GAAW,GACXC,EAAkB,CACdnF,GAAIJ,EAAQI,GAAIrC,OAAQiC,EAAQjC,OAAQsC,UAAWL,EAAQK,UAAWjB,MAAOY,EAAQZ,MAAMa,OAAQD,EAAQC,OAAQK,UAAWN,EAAQM,UAAWJ,SAAUF,EAAQE,oBCjGlKwF,EAAmB,SAAC5B,GAAW,IAAD,cAEAC,cAAhCC,EAFgC,EAEhCA,SAASC,EAFuB,EAEvBA,OAAOC,EAFgB,EAEhBA,aAQvB,OACI,6BACI,0BAAM3C,SAAY2C,GART,SAAC3E,EAAKnB,GACnB0F,EAAM6B,aAAapG,GAEnBnB,EAAEC,OAAO+F,YAMD,yCACA,2BAAO3F,KAAK,OAAOH,KAAK,SAAS+F,IAC7BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQlG,cADb,aACK,EAAgBwG,SAErB,wCACA,2BAAO9F,KAAK,OAAOH,KAAK,QAAQ+F,IAC5BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ9E,aADb,aACK,EAAeoF,SAGpB,4CACA,2BAAO9F,KAAK,OAAOH,KAAK,YAAY+F,IAChCL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ5D,iBADb,aACK,EAAmBkE,SAGxB,wCACA,2BAAO9F,KAAK,OAAOH,KAAK,QAAQ+F,IAC5BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ7E,aADb,aACK,EAAemF,SAGpB,yCACA,2BAAO9F,KAAK,OAAOH,KAAK,SAAS+F,IAC7BL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQhE,cADb,aACK,EAAgBsE,SAGrB,4CACA,2BAAO9F,KAAK,OAAOH,KAAK,YAAY+F,IAChCL,EAAS,CACLM,SAAS,CAAC/F,OAAM,EAAMgG,QAAS,uBAGvC,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ2B,iBADb,aACK,EAAmBrB,SAExB,wDCvEHsB,EAAgB,SAAC,GAA2C,IAAD,YAAxCC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,iBAAuB,EAEfhC,YAAQ,CACzDiB,cAAee,IADX/B,EAF4D,EAE5DA,SAAUC,EAFkD,EAElDA,OAAQC,EAF0C,EAE1CA,aAAce,EAF4B,EAE5BA,SAKxCA,EAAS,SAAUc,EAAiBhI,QACpCkH,EAAS,QAASc,EAAiB5G,OACnC8F,EAAS,YAAac,EAAiB1F,WACvC4E,EAAS,QAASc,EAAiB3G,OACnC6F,EAAS,SAAUc,EAAiB9F,QACpCgF,EAAS,YAAac,EAAiBH,WAQvC,OACI,6BACI,0BAAMrE,SAAU2C,GARP,SAAC3E,EAAMnB,GACpB0H,EAAgBC,EAAiB3F,GAAIb,GAErCnB,EAAEC,OAAO+F,YAOD,yCACA,2BAAO3F,KAAK,OAAOH,KAAK,SAAS+F,IAC7BL,EAAS,CACLM,SAAU,CAAE/F,OAAO,EAAMgG,QAAS,uBAG1C,oCACKN,QADL,IACKA,GADL,UACKA,EAAQlG,cADb,aACK,EAAgBwG,SAGrB,wCACA,2BAAO9F,KAAK,OAAOH,KAAK,QAAQ+F,IAC5BL,EAAS,CACLM,SAAU,CAAE/F,OAAO,EAAMgG,QAAS,uBAG1C,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ9E,aADb,aACK,EAAeoF,SAGpB,4CACA,2BAAO9F,KAAK,OAAOH,KAAK,YAAY+F,IAChCL,EAAS,CACLM,SAAU,CAAE/F,OAAO,EAAMgG,QAAS,uBAG1C,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ5D,iBADb,aACK,EAAmBkE,SAGxB,wCACA,2BAAO9F,KAAK,OAAOH,KAAK,QAAQ+F,IAC5BL,EAAS,CACLM,SAAU,CAAE/F,OAAO,EAAMgG,QAAS,uBAG1C,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ7E,aADb,aACK,EAAemF,SAGpB,yCACA,2BAAO9F,KAAK,OAAOH,KAAK,SAAS+F,IAC7BL,EAAS,CACLM,SAAU,CAAE/F,OAAO,EAAMgG,QAAS,uBAG1C,oCACKN,QADL,IACKA,GADL,UACKA,EAAQhE,cADb,aACK,EAAgBsE,SAGrB,4CACA,2BAAO9F,KAAK,OAAOH,KAAK,YAAY+F,IAChCL,EAAS,CACLM,SAAU,CAAE/F,OAAO,EAAMgG,QAAS,uBAG1C,oCACKN,QADL,IACKA,GADL,UACKA,EAAQ2B,iBADb,aACK,EAAmBrB,SAIxB,qDCtFHyB,EAAiB,SAAC,GAA4C,IAA1CtF,EAAyC,EAAzCA,WAAWuF,EAA8B,EAA9BA,gBAAgBtB,EAAc,EAAdA,QACxD,OACI,6BACF,+BACE,+BACE,4BACE,sCACA,qCACA,yCACA,qCACA,sCACA,yCACA,0CAGJ,+BAEIjE,EAAW4C,OAAS,EAChB5C,EAAWgB,KAAI,SAAAX,GAAS,OAExB,wBAAIY,IAAKZ,EAAUX,IACjB,4BAAKW,EAAUhD,QACf,4BAAKgD,EAAU5B,OACf,4BAAK4B,EAAUV,WACf,4BAAKU,EAAU3B,OACf,4BAAK2B,EAAUd,QACf,4BAAKc,EAAU6E,WACf,4BACE,4BACEpH,UAAU,sBACVI,QAAS,WAAM+F,EAAQ5D,KAFzB,UAIA,4BACEvC,UAAU,sBACVI,QAAS,WAAOqH,EAAgBlF,EAAUX,MAF5C,iBAUJ,4BACE,wBAAIwE,QAAS,GAAb,iBCtCLsB,EAAkB,WAAO,IAAD,EAIGpI,mBAAS,CACzC,CAAEsC,GAAI,GACDrC,OAAQ,GACRoB,MAAO,GACPkB,UAAW,GACXjB,MAAM,GACNa,OAAQ,GACR2F,UAAW,MAXa,mBAI1BlF,EAJ0B,KAIdC,EAJc,KAcjCW,qBAAU,WAEN6E,MAED,IAGH,IAAMA,EAAmB,WAErBnH,IAAMC,IAAN,UAAatB,EAAb,eACC0B,MAAK,SAAAC,GAEFqB,EAAcrB,EAAIC,UA1BO,EA4EHzB,oBAAS,GA5EN,mBA4E1BuH,EA5E0B,KA4EjBC,EA5EiB,OA6EexH,mBAAS,CACrDsC,GAAI,KAAMrC,OAAQ,GAAIoB,MAAO,GAAIkB,UAAW,GAAIjB,MAAO,GAAIa,OAAQ,GAAI2F,UAAW,KA9ErD,mBA6E1BG,EA7E0B,KA6ERK,EA7EQ,KAiHjC,OACI,6BACI,yBAAK5H,UAAU,aACX,qDACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cAEP6G,EACI,6BACI,gDACA,kBAAC,EAAD,CACIS,gBApCZ,SAAC1F,EAAI0F,GAEzB9G,IAAMqE,IAAI,UAAG1F,EAAH,cAAsByC,EACvB,CACGrC,OAAQ+H,EAAgB/H,OACxBoB,MAAO2G,EAAgB3G,MACvBkB,UAAWyF,EAAgBzF,UAC3BjB,MAAO0G,EAAgB1G,MACvBa,OAAQ6F,EAAgB7F,OACxB2F,UAAUE,EAAgBF,YAIvCvG,MAAK,SAASC,GAEb6G,OAGD7D,OAAM,SAASC,GACdzD,QAAQC,IAAIwD,MAEZ+C,GAAW,IAgBqBS,iBAAkBA,KAItB,6BACI,iDACA,kBAAC,EAAD,CAAkBJ,aAjGjC,SAAC5E,GAElB/B,IAAM+C,KAAN,UAAcpE,EAAd,cACS,CACGI,OAAQgD,EAAUhD,OAClBoB,MAAO4B,EAAU5B,MACjBkB,UAAWU,EAAUV,UACrBjB,MAAO2B,EAAU3B,MACjBa,OAAQc,EAAUd,OAClB2F,UAAU7E,EAAU6E,YAGjCvG,MAAK,SAASC,GAEb6G,OAGD7D,OAAM,SAASC,GACdzD,QAAQC,IAAIwD,WAuFA,yBAAK/D,UAAU,cACX,0CACA,kBAAC,EAAD,CACIkC,WAAYA,EACZuF,gBArFA,SAAA7F,GAEpBpB,IAAMyG,OAAO,UAAG9H,EAAH,eAAuByC,GAGnCf,MAAK,SAASC,GAEb6G,OAID7D,OAAM,SAASC,GACdzD,QAAQC,IAAIwD,OA0EMoC,QA/DR,SAAC5D,GACbuE,GAAW,GACXc,EAAoB,CAChBhG,GAAIW,EAAUX,GAAIrC,OAAQgD,EAAUhD,OAAQoB,MAAO4B,EAAU5B,MAAOkB,UAAWU,EAAUV,UAAUJ,OAAQc,EAAUd,OAAOb,MAAO2B,EAAU3B,MAAOwG,UAAW7E,EAAU6E,oBCzFxKS,EAAsB,SAAC,GAAgC,IAA9BrG,EAA6B,EAA7BA,QAAQsG,EAAqB,EAArBA,eAQ1C,OACI,oCACI,yBAAK9H,UAAU,sBACX,yBAAKA,UAAU,eAAf,WACA,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAc,WAAWwB,EAAQC,QAC/C,wBAAIzB,UAAU,cAAc,WAAWwB,EAAQjC,QAC/C,wBAAIS,UAAU,cAAc,aAAawB,EAAQE,UAEjD,4BAAQ1B,UAAU,kBAAkBI,QAfvB,WACzB0H,EAAetG,KAcH,mBCZPuG,EAAkB,WAAO,IAAD,EAGDzI,mBAAS,CACrC,CACIsC,GAAI,GACJrC,OAAQ,GACRsC,UAAW,GACXjB,MAAO,GACPa,OAAQ,GACRK,UAAW,GACXJ,SAAU,GACVsG,gBAAiB,MAZQ,mBAG1B/B,EAH0B,KAGhBW,EAHgB,OAgBPtH,mBAAS,CAC/B,CACI6E,OAAQ,GACRgB,cAAe,GACfC,kBAAmB,GACnBf,aAAc,GACdC,WAAY,MAtBa,mBAgB1BI,EAhB0B,KAgBnBC,EAhBmB,OA0BSrF,mBACtC,CACIsC,GAAI,GACJrC,OAAQ,GACRsC,UAAW,GACXjB,MAAO,GACPa,OAAQ,GACRK,UAAW,GACXJ,SAAU,GACVsG,gBAAiB,KAnCQ,mBA0B1BC,EA1B0B,KA0BXC,EA1BW,OAyCM5I,oBAAS,GAzCf,mBAyC1B6I,EAzC0B,KAyCbC,EAzCa,KA2CjCtF,qBAAU,WAEN,IAAMM,EAAUjC,KAAKkC,MAAMpC,aAAaqC,QAAQ,YAEhD9C,IAAMC,IAAI,UAAGtB,EAAH,wBAAkCiE,EAAQxB,IAC/Cf,MAAK,SAAAC,GAEF8F,EAAY9F,EAAIC,WAKzB,IAEH,IAAM+G,EAAiB,SAACtG,GAGpB0G,EAAiB1G,GACjB6G,EAAa7G,EAAQI,IACrBwG,GAAgB,IAKdC,EAAe,SAACzG,GAElBpB,IAAMC,IAAI,UAAGtB,EAAH,kBAA4ByC,GACjCf,MAAK,SAAAC,GACFR,QAAQC,IAAIO,EAAIC,MAEhB4D,EAAS7D,EAAIC,UASzB,OACI,oCACI,6BACI,yBAAKf,UAAU,aACX,mDACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cAGPiG,EAASnB,OAAS,EACdmB,EAAS/C,KAAI,SAAC1B,GACV,OAAO,kBAAC,EAAD,CAAqB2B,IAAK3B,EAAQI,GAAIJ,QAASA,EAASsG,eAAgBA,OAGhF,4DAMf,yBAAK9H,UAAU,cAEPmI,EAEI,6BACI,wBAAInI,UAAU,cACV,wBAAIA,UAAU,mBAAmB,WAAaiI,EAAcxG,QAC5D,wBAAIzB,UAAU,mBAAmB,WAAaiI,EAAc1I,QAC5D,wBAAIS,UAAU,mBAAmB,sBAAwBiI,EAAcD,iBACvE,wBAAIhI,UAAU,mBAAmB,cAAgBiI,EAAcpG,WAC/D,wBAAI7B,UAAU,mBAAmB,UAAYiI,EAAcrH,OAC3D,wBAAIZ,UAAU,mBAAmB,cAAgBiI,EAAcnG,WAC/D,wBAAI9B,UAAU,mBAAmB,aAAeiI,EAAcvG,WAElE,6BACA,6BAGA,2BAAOqD,MAAM,SACT,2BAAOA,MAAM,cACT,4BACI,wBAAIC,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,WAGR,+BAEQN,EAAMxB,KAAI,SAAC+B,EAAKC,GACZ,OAAQ,4BACJ,wBAAIF,MAAM,OAAO,EAAEE,GACnB,4BAAKD,EAAKE,eACV,4BAAKF,EAAKG,mBACV,4BAAKH,EAAKZ,aAAa,IAAIY,EAAKX,mBAWpD,oCCxJ3BgE,EAAc,SAAC,GAAwB,IAAvBrD,EAAsB,EAAtBA,KAAKsD,EAAiB,EAAjBA,YAM9B,OACI,6BACI,yBAAKvI,UAAU,sBACX,yBAAKA,UAAU,eAAf,QACA,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAciF,EAAKuD,eACjC,uBAAGxI,UAAU,cAAc,iBAAiBiF,EAAKZ,aAAa,IAAIY,EAAKX,YACvE,uBAAGtE,UAAU,cAAc,gBAAgBiF,EAAKV,WAAW,IAAIU,EAAKT,WAEpE,4BAAQxE,UAAU,kBAAkBI,QAb9B,WAClBmI,EAAYtD,KAYA,gBCfPwD,EAAqB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACjC,OACI,yBAAK1I,UAAU,sCACP,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,aAEf,uBAAGA,UAAU,aAAa0I,EAAYA,gBCDzCC,EAAkB,WAAO,IAAD,EAGPrJ,mBAAS,CAC/B,CACI6E,OAAQ,GACRC,eAAgB,GAChBC,aAAc,GACdC,WAAY,GACZC,WAAY,GACZC,UAAW,MAVc,mBAG1BE,EAH0B,KAGnBC,EAHmB,OAcSrF,mBAAS,CAC/C,CACIoJ,YAAa,MAhBY,mBAc1BE,EAd0B,KAcXC,EAdW,OAqBGvJ,mBAChC,CACI6E,OAAQ,GACRC,eAAgB,GAChBC,aAAc,GACdC,WAAY,GACZC,WAAY,GACZC,UAAW,KA5Bc,mBAqB1BsE,EArB0B,KAqBdC,EArBc,OAgCNzJ,mBACvB,CACIoJ,YAAa,KAlCY,mBAgC1B3I,EAhC0B,KAgCnByC,EAhCmB,OAuCqBlD,oBAAS,GAvC9B,mBAuC1B0J,EAvC0B,KAuCLC,EAvCK,KAkDjCnG,qBAAU,WAEN,IAAMM,EAAUjC,KAAKkC,MAAMpC,aAAaqC,QAAQ,YAChD9C,IAAMC,IAAI,UAAGtB,EAAH,oBAA8BiE,EAAQxB,IAC3Cf,MAAK,SAAAC,GACF6D,EAAS7D,EAAIC,WAItB,IAEH,IAAMwH,EAAc,SAACtD,GAGjB8D,EAAc9D,GACdiE,EAAoBjE,EAAKd,QACzB8E,GAAuB,IAIrBC,EAAsB,SAAC/E,GAEzB3D,IAAMC,IAAI,UAAGtB,EAAH,wBAAkCgF,GACvCtD,MAAK,SAAAC,GAGF+H,EAAiB/H,EAAIC,UAmCjC,OACI,oCACI,yBAAKf,UAAU,aAEf,mDACI,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cAGP0E,EAAMI,OAAS,EACXJ,EAAMxB,KAAI,SAAC+B,GACP,OAAO,kBAAC,EAAD,CAAa9B,IAAK8B,EAAKd,OAAQc,KAAMA,EAAMsD,YAAaA,OAGhE,+CAOf,yBAAKvI,UAAU,cAGPgJ,EAEI,6BAEQJ,EAAc1F,KAAI,SAACwF,GACf,OAAO,kBAAC,EAAD,CAAoBA,YAAaA,OAKhD,0BAAM3F,SA/DV,SAACnD,GAGzBA,EAAES,iBAEF,IAAM+C,EAAUjC,KAAKkC,MAAMpC,aAAaqC,QAAQ,YAChD9C,IAAM+C,KAAN,UAAcpE,EAAd,oBACI,CACIgF,OAAQ2E,EAAW3E,OACnBT,YAAaN,EAAQxB,GACrB8G,YAAa3I,EAAM2I,cAItB7H,MAAK,SAAUC,GAEZoI,EAAoBJ,EAAW3E,QAC/B3B,EAAU,CACNkG,YAAa,QAIpB5E,OAAM,SAAUC,GACbzD,QAAQC,IAAIwD,QA0CY,2BAAO9D,KAAK,OACRH,KAAK,cACLI,YAAY,yBACZC,SA7GnB,SAACP,GAElB4C,EAAU,2BACHzC,GADE,kBAEJH,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UA0GMA,MAAOA,EAAM2I,cAEjB,4BAAQzI,KAAK,UAAb,aAMJ,mCCnKvBkJ,EAAS,WAElB,IAAM/F,EAAUjC,KAAKkC,MAAMpC,aAAaqC,QAAQ,YAShD,OACI,yBAAKtD,UAAU,+CAGX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,cAZN,WAEjB,GADAM,QAAQC,IAAI6C,GACgB,KAAzBA,EAAQpC,cACP,OAAO,EAaKoI,GAEI,yBAAKpJ,UAAU,cAEnB,kBAAC,IAAD,CACIqJ,gBAAgB,SAChBrJ,UAAU,oBACVsJ,OAAK,EACLC,GAAG,cAJP,wBAUA,kBAAC,IAAD,CACIF,gBAAgB,SAChBrJ,UAAU,oBACVsJ,OAAK,EACLC,GAAG,YAJP,sBASA,kBAAC,IAAD,CACIF,gBAAgB,SAChBrJ,UAAU,oBACVsJ,OAAK,EACLC,GAAG,iBAJP,iBAUA,kBAAC,IAAD,CACIF,gBAAgB,SAChBrJ,UAAU,oBACVsJ,OAAK,EACLC,GAAG,mBAJP,mBAUA,kBAAC,IAAD,CACIF,gBAAgB,SAChBrJ,UAAU,oBACVsJ,OAAK,EACLC,GAAG,gBAJP,iBAcY,yBAAKvJ,UAAU,cAEvB,kBAAC,IAAD,CACaqJ,gBAAgB,SACjBrJ,UAAU,oBACVsJ,OAAK,EACLC,GAAG,oBAJf,oBAUI,kBAAC,IAAD,CACSF,gBAAgB,SACjBrJ,UAAU,oBACVsJ,OAAK,EACLC,GAAG,oBAJX,uBAwBpB,yBAAKvJ,UAAU,yDACX,wBAAIA,UAAU,sBACV,kBAAC,IAAD,CACIqJ,gBAAgB,SAChBrJ,UAAU,oBACVsJ,OAAK,EACLC,GAAG,UAJP,qBC3GPC,EAAiB,WAC1B,OACI,oCACI,kBAAC,EAAD,MACA,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOF,OAAK,EAACG,KAAO,aAAaC,UAAYhC,IAC7C,kBAAC,IAAD,CAAO4B,OAAK,EAACG,KAAO,WAAWC,UAAahD,IAC5C,kBAAC,IAAD,CAAO4C,OAAK,EAACG,KAAO,gBAAgBC,UAAa/H,IACjD,kBAAC,IAAD,CAAO2H,OAAK,EAACG,KAAO,mBAAmBC,UAAaf,IACpD,kBAAC,IAAD,CAAOW,OAAK,EAACG,KAAO,mBAAmBC,UAAa3B,IACpD,kBAAC,IAAD,CAAOuB,OAAK,EAACG,KAAO,eAAeC,UAAaxF,IAChD,kBAAC,IAAD,CAAOoF,OAAK,EAACG,KAAO,kBAAkBC,UAAa1F,QCd1D2F,EAAY,WACrB,OACI,kBAAC,IAAD,KACF,6BAIE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAQL,OAAK,EAACG,KAAK,SAASC,UAAWtK,IACvC,kBAAC,IAAD,CAASqK,KAAK,IAAIC,UAAWF,QChB1BI,EAAY,WACrB,OACI,kBAAC,EAAD,OCCRC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.fafebad6.chunk.js","sourcesContent":["// export const SERVER = \"http://localhost:8080/api/\"\nexport const SERVER = \"https://masajes-rational-team.herokuapp.com/api/\"","import React,{ useState } from 'react'\nimport '../css/login.css'\nimport axios from 'axios';\nimport {SERVER} from '../server/Server'\n\nexport const LoginScreen = ({history}) => {\n\n    const [inputValue, setInputValue] = useState({\n        cedula: \"\",\n        contrasena: \"\"\n    })\n\n\n    const handleInputChange = (e) => {\n        setInputValue({\n            ...inputValue,\n            [e.target.name]: e.target.value\n        });\n    }\n    \n    const handleLogin = (e) => {\n\n        e.preventDefault();\n        console.log(inputValue.cedula,inputValue.contrasena);\n        axios.get(`${SERVER}login`, {\n            params:{\n               clave: inputValue.cedula,\n               email: inputValue.contrasena\n\n            }\n        })\n        .then(res => {\n\n            if(res.data.identificador != -1){\n\n                localStorage.setItem(\"usuario\",JSON.stringify(res.data));\n                if(res.data.identificador == 1){\n                    history.replace('/terapeuta');\n                }else{\n                    history.replace('/gestionsesiones');\n                }\n                \n            \n            }else{\n                alert(\"Cedula o contraseña incorrectas\");\n            }\n            \n            \n        })\n\n    } \n    return (\n        <>\n            <div className=\"login-page\">\n                <div className=\"form\">\n                    <form  className=\"login-form\">\n                        <input type=\"text\" placeholder=\"correo\" name=\"contrasena\" onChange={handleInputChange} />\n                        <input type=\"password\" placeholder=\"clave\" name=\"cedula\" onChange={handleInputChange} />\n                        <button onClick={handleLogin}>Iniciar Sesion</button>\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport const TarjetaCliente = ({ cliente }) => {\n    return (\n        <>\n            <div className=\"card bg-light mb-3\" >\n                <div className=\"card-header\">Cliente</div>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{\"Nombre: \"+cliente.nombre}</h5>\n                    <h5 className=\"card-title\">{\"Cedula: \"+cliente.cedula}</h5>\n                    <h5 className=\"card-title\">{\"Telefono: \"+cliente.telefono}</h5>\n                    \n                    {/* <button className=\"btn btn-primary\">Asignar Cita</button> */}\n                </div>\n            </div>\n\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\n// import { useForm } from 'react-hook-form'\nimport { TarjetaCliente } from './TarjetaCliente';\nimport axios from 'axios';\nimport {SERVER} from '../server/Server'\n\nexport const AgendarCita = () => {\n\n\n    // const { register, errors, handleSubmit, setValue } = useForm({\n    //     defaultValues: {}\n    // });\n\n\n    const [cliente, setCliente] = useState(\n        {\n            id: '',\n            cedula: '',\n            direccion: '',\n            email: '',\n            nombre: '',\n            ocupacion: '',\n            telefono: ''\n        }\n    );\n\n    const [terapias, setTerapias] = useState([\n        {\n            id: '-1',\n            nombre: 'Seleccione'\n        }\n    ]);\n\n    const [terapeutas, setTerapeutas] = useState([\n        {\n            id: '-1',\n            nombre: 'Seleccione'\n        }\n    ]);\n\n    const [value, setValues] = useState(\n        {\n            cedula: '',\n            terapia: '',\n            fecha: '',\n            hora: '',\n            terapeuta: ''\n        }\n    );\n\n    const [visualCliente, setVisualCliente] = useState(false);\n    const [visualForm, setVisualForm] = useState(false);\n\n\n    const handleValues = (e) => {\n\n        setValues({\n            ...value,\n            [e.target.name]: e.target.value\n        });\n\n    }\n\n    useEffect(() => {\n\n        \n        axios.get(`${SERVER}terapias`)\n            .then(res => {\n                setTerapias(res.data);\n\n            })\n\n    }, [])\n\n    const onSubmitCliente = (e) => {\n\n        e.preventDefault();\n        axios.get(`${SERVER}cliente/cedula/` + value.cedula)\n            .then(res => {\n              \n                setCliente(res.data);\n                setVisualForm(true);\n                setVisualCliente(true);\n                //limpiar campos\n\n\n\n            })\n\n    }\n\n    const onSubmitTerapeutas = (e) => {\n     \n\n        e.preventDefault();\n        axios.get(`${SERVER}terapeutas/availables`,{\n            params:{\n                fechaEntrada: value.fecha,\n                idTerapia: value.terapia\n            }\n        })\n        .then(res => {\n\n           \n            setTerapeutas(res.data);\n\n\n        })\n        \n\n    }\n\n    const asignarCita = () => {\n\n        const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n\n        \n        axios.post(`${SERVER}cita`, \n                 {\n                    fecha: value.fecha,\n                    idCliente: cliente.id,\n                    idSecretario: usuario.id,\n                    idTerapeuta: value.terapeuta,\n                    idTerapia:value.terapia,\n            }\n      )\n      .then(function(res) {\n\n        alert(\"Cita creada con exito\");\n\n        window.location.reload(true);\n\n        \n    \n      })\n      .catch(function(err) {\n        console.log(err);\n      })\n\n        \n    }\n\n\n\n    return (\n        <>\n            <div className=\"container\">\n\n                <div className=\"flex-row\">\n                    <div className=\"flex-large\">\n\n                        <form onSubmit={onSubmitCliente}>\n                            <label>Cedula</label>\n                            <input type=\"text\"\n                                name=\"cedula\"\n                                onChange={handleValues}\n                                value={value.cedula} />\n\n                            <button type=\"submit\">Buscar Cliente</button>\n                        </form>\n                        {\n                            visualCliente ? (\n\n                                <div>\n                                    <TarjetaCliente cliente={cliente} />\n                                </div>\n\n\n                            ) : (\n                                    <div></div>\n\n                                )\n                        }\n\n\n\n                    </div>\n                    <div className=\"flex-large\">\n\n                        {\n                            visualForm ? (\n\n                                <div>\n                                    <form onSubmit={onSubmitTerapeutas}>\n                                        <label>Terapia</label>\n                                        <select name=\"terapia\" value={value.terapia} onChange={handleValues}>\n                                            {\n                                                terapias.map((terapia) => {\n                                                    return <option key={terapia.id} value={terapia.id}>{terapia.nombre}</option>\n                                                })\n                                            }\n\n                                        </select>\n\n                                        <label>Fecha y hora</label>\n                                        <div className=\"form-group row\">\n                                            <div className=\"col-12\">\n                                                <input className=\"form-control\"\n                                                    type=\"datetime-local\"\n                                                    value={value.fecha}\n                                                    id=\"example-datetime-local-input\"\n                                                    name=\"fecha\"\n                                                    onChange={handleValues} />\n                                            </div>\n                                        </div>\n\n                                        {/* <label>Fecha</label>\n                            <input type=\"text\" name=\"fecha\"/>\n                            <label>Hora</label>\n                            <input type=\"text\" name=\"hora\" /> */}\n\n\n                                        <button>Terapeutas disponibles</button>\n                                    </form>\n\n\n                                    <label>Terapuetas disponibles</label>\n                                    <select name=\"terapeuta\" value={value.terapeuta} onChange={handleValues}>\n\n                                        {\n                                            terapeutas.map((terapeuta) => {\n                                                return <option key={terapeuta.id} value={terapeuta.id}>{terapeuta.nombre}</option>\n                                            })\n                                        }\n\n                                    </select>\n                                    <button onClick={asignarCita}>Guardar cita</button>\n                                </div>\n\n\n                            ) : (\n                                    <div></div>\n\n                                )\n                        }\n\n\n\n\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport {SERVER} from '../server/Server'\n\nexport const AsignarTerapia = () => {\n\n    const [terapias, setTerapias] = useState([\n        {\n            id: '-1',\n            nombre: 'Seleccione'\n        }\n    ]);\n\n    const [terapeutas, setTerapeutas] = useState([\n        {\n            id: '-1',\n            nombre: 'Seleccione'\n        }\n    ]);\n\n    const [value, setValues] = useState(\n        {\n            terapia: '',\n            terapeuta: '',\n        }\n    );\n\n    const handleValues = (e) => {\n\n        setValues({\n            ...value,\n            [e.target.name]: e.target.value\n        });\n\n    }\n\n    useEffect(() => {\n\n        axios.get(`${SERVER}terapias`)\n            .then(res => {\n                setTerapias(res.data);\n\n            })\n\n        axios.get(`${SERVER}terapeutas`)\n        .then(res => {\n            setTerapeutas(res.data);\n\n        })\n\n    }, [])\n\n    const onSubmitAsignar = (e) => {\n\n        e.preventDefault();\n        axios.post(`${SERVER}terapias/asignacion`,{\n            idTerapeuta:value.terapeuta,\n            idTerapia:value.terapia\n            \n        })\n        .then(res => {\n\n            console.log(res.status);\n            if(res.status === 201){\n\n                alert(\"Asignación exitosa\");\n            }else{\n                alert(\"Algo salio mal\");\n            }\n              \n            \n        })\n\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Gestión Clientes</h1>\n                <div className=\"flex-row\">\n                    <div className=\"flex-large\">\n\n                        <form onSubmit={onSubmitAsignar}>\n                            <label>Terapia</label>\n                            <select name=\"terapia\" value={value.terapia} onChange={handleValues}>\n                            \n                                {\n                                    \n                                    terapias.map((terapia) => {\n                                        return <option key={terapia.id} value={terapia.id}>{terapia.nombre}</option>\n                                    })\n                                }\n                                <option value={-5}>Hola</option>\n                            </select>\n\n                            <label>Terapeuta</label>\n                            <select name=\"terapeuta\" value={value.terapeuta} onChange={handleValues}>\n                                {\n                                    terapeutas.map((terapeuta) => {\n                                        return <option key={terapeuta.id} value={terapeuta.id}>{terapeuta.nombre}</option>\n                                    })\n                                }\n                            </select>\n\n\n                            <button>Asignar</button>\n                        </form>\n\n\n                    </div>\n                    <div className=\"flex-large\">\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport { SERVER } from '../server/Server'\n\nexport const CobrarCitas = () => {\n\n\n    const [citas, setCitas] = useState([\n        {\n            idCita: '',\n            nonmbreCliente: '',\n            fechaInicial: '',\n            horaInicio: '',\n            fechaFinal: '',\n            horaFinal: '',\n            estadoPago: ''\n        }\n    ]);\n\n    useEffect(() => {\n\n        axios.get(`${SERVER}citas`)\n            .then(res => {\n                setCitas(res.data);\n\n            })\n\n    }, [])\n\n    const obtenerCitas = () => {\n\n        axios.get(`${SERVER}citas`)\n            .then(res => {\n                setCitas(res.data);\n\n            })\n    }\n\n    const handleCobro = (idCita) => {\n\n\n        axios.put(`${SERVER}cita/pagar/` + idCita)\n            .then(res => {\n                obtenerCitas();\n\n            })\n    }\n\n\n    return (\n        <div>\n            {\n                citas.length > 0 ? (\n                    <table class=\"table\">\n\n\n                        <thead class=\"thead-dark\">\n                            <tr>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">Terapia</th>\n                                <th scope=\"col\">Terapeuta</th>\n                                <th scope=\"col\">Fecha</th>\n                                <th scope=\"col\">Cobro</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n\n                                citas.map((cita, index) => {\n                                    return (<tr>\n                                        <th scope=\"row\">{1 + index}</th>\n                                        <td>{cita.nombreTerapia}</td>\n                                        <td>{cita.nombreProfesional}</td>\n                                        <td>{cita.fechaInicial + \" \" + cita.horaInicio}</td>\n                                        <td>\n                                            {\n                                                cita.estadoPago === 0 ? (\n                                                    <button className=\"btn btn-danger\" onClick={() => handleCobro(cita.idCita)}>Cobrar</button>\n                                                ) : (\n                                                        <button className=\"btn btn-success\">Pago</button>\n                                                    )\n                                            }\n\n                                        </td>\n                                    </tr>\n                                    )\n\n                                })\n                            }\n\n                        </tbody>\n                    </table>\n\n                ) : (\n                        <h1>No hay citas</h1>\n                    )\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport {useForm} from 'react-hook-form'\n\n\nexport const AddClienteForm = (props) => {\n\n    const {register,errors,handleSubmit} = useForm();\n\n    const onSubmit = (data,e) => {\n        props.addCliente(data);\n        //limpiar campos\n        e.target.reset();\n    }\n    return (\n        <div>\n            <form onSubmit = {handleSubmit(onSubmit)}>\n                <label>Cedula</label>\n                <input type=\"text\" name=\"cedula\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                } />\n                <div>\n                    {errors?.cedula?.message}\n                </div>\n                <label>Direccion</label>\n                <input type=\"text\" name=\"direccion\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.direccion?.message}\n                </div>\n\n                <label>Email</label>\n                <input type=\"text\" name=\"email\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.email?.message}\n                </div>\n\n                <label>Nombre</label>\n                <input type=\"text\" name=\"nombre\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.nombre?.message}\n                </div>\n\n                <label>Ocupacion</label>\n                <input type=\"text\" name=\"ocupacion\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.ocupacion?.message}\n                </div>\n\n                <label>Telefono</label>\n                <input type=\"text\" name=\"telefono\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.telefono?.message}\n                </div>\n\n\n                <button>Agregar cliente</button>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const ClienteTable = ({ clientes,deleteCliente,editRow }) => {\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Cedula</th>\n            <th>Direccion</th>\n            <th>Email</th>\n            <th>Nombre</th>\n            <th>Ocupacion</th>\n            <th>Telefono</th>\n            <th>Acciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            clientes.length > 0 ? (\n              clientes.map(cliente => (\n\n                  <tr key={cliente.id}>\n                  <td>{cliente.cedula}</td>\n                  <td>{cliente.direccion}</td>\n                  <td>{cliente.email}</td>\n                  <td>{cliente.nombre}</td>\n                  <td>{cliente.ocupacion}</td>\n                  <td>{cliente.telefono}</td>\n                  <td>\n                    <button \n                      className=\"button muted-button\"\n                      onClick={() =>{editRow(cliente)}}\n                    >Editar</button>\n                    <button \n                      className=\"button muted-button\"\n                      onClick={() => {deleteCliente(cliente.id)}}\n                    >\n                      Eliminar</button>\n                  </td>\n                </tr>\n\n              ))\n            ) : (\n                <tr>\n                  <td colSpan={3}>No users</td>\n                </tr>\n              )\n          }\n\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React from 'react'\nimport {useForm} from 'react-hook-form'\n\nexport const EditClienteForm = ({updateCliente,currentCliente}) => {\n\n    const {register,errors,handleSubmit,setValue} = useForm({\n        defaultValues: currentCliente\n    });\n\n    \n    setValue('cedula', currentCliente.cedula);\n    setValue('direccion',currentCliente.direccion);\n    setValue('email', currentCliente.email);\n    setValue('nombre',currentCliente.nombre);\n    setValue('ocupacion', currentCliente.ocupacion);\n    setValue('telefono',currentCliente.telefono);\n\n    const onSubmit = (data,e) => {\n        updateCliente(currentCliente.id,data);\n        //limpiar campos\n        e.target.reset();\n    }\n    return (\n        <div>\n            <form onSubmit = {handleSubmit(onSubmit)}>\n\n                <label>Cedula</label>\n                <input type=\"text\" name=\"cedula\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                } />\n                <div>\n                    {errors?.cedula?.message}\n                </div>\n\n                <label>Direccion</label>\n                <input type=\"text\" name=\"direccion\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.direccion?.message}\n                </div>\n\n                <label>Email</label>\n                <input type=\"text\" name=\"email\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.email?.message}\n                </div>\n\n                <label>Nombre</label>\n                <input type=\"text\" name=\"nombre\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.nombre?.message}\n                </div>\n\n                <label>Ocupacion</label>\n                <input type=\"text\" name=\"ocupacion\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.ocupacion?.message}\n                </div>\n\n                <label>Telefono</label>\n                <input type=\"text\" name=\"telefono\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.telefono?.message}\n                </div>\n                <button>Editar Cliente</button>\n            </form>\n        </div>\n    )\n}\n","import React, { useState,useEffect } from 'react'\nimport { AddClienteForm } from '../AddClienteForm';\nimport { ClienteTable } from '../ClienteTable'\nimport { EditClienteForm } from '../EditClienteForm';\nimport {SERVER} from '../../server/Server'\n\nimport '../index2.css'\nimport axios from 'axios';\nexport const ClienteScreen = () => {\n\n    \n\n    useEffect(() => {\n        \n        listarClientes()\n        \n    }, [])\n\n    const [clientes, setClientes] = useState([\n        { id: '',\n            cedula: '',\n            direccion: '',\n            email: '',\n            nombre: '',\n            ocupacion: '',\n            telefono: '' }\n    ]);\n\n\n    //lista clientes\n    const listarClientes = () => {\n\n        \n        axios.get(`${SERVER}clientes`)\n        .then(res => {\n\n            setClientes(res.data);\n            console.log(res.data);\n            \n        })\n\n    }\n\n\n    //agregar cliente\n    const addCliente = (cliente) => {\n\n        const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n        axios.post(`${SERVER}clientes`, \n                 {\n                    cedula: cliente.cedula,\n                    direccion: cliente.direccion,\n                    email: cliente.email,\n                    fecha_nacimiento: \"2000-10-10\",\n                    idSecretario: usuario.id,\n                    nombre: cliente.nombre,\n                    ocupacion:cliente.ocupacion,\n                    telefono: cliente.telefono\n\n            }\n      )\n      .then(function(res) {\n\n        listarClientes()\n    \n      })\n      .catch(function(err) {\n        console.log(err);\n      })\n\n    }\n\n    //Eliminar cliente\n    const deleteCliente = id => {\n\n        axios.delete(`${SERVER}clientes/`+id, \n            \n      )\n      .then(function(res) {\n        \n        listarClientes()\n        \n\n      })\n      .catch(function(err) {\n        console.log(err);\n      })\n\n      \n    }\n\n    //Editar cliente\n    const [editing, setEditing] = useState(false);\n    const [currentCliente, setCurrentCliente] = useState({\n        id: null, cedula: '', direccion: '', email: '', nombre: '', ocupacion: '', telefono: ''\n    });\n\n    const editRow = (cliente) => {\n        setEditing(true);\n        setCurrentCliente({\n            id: cliente.id, cedula: cliente.cedula, direccion: cliente.direccion, email: cliente.email,nombre: cliente.nombre, ocupacion: cliente.ocupacion, telefono: cliente.telefono\n        })\n    }\n\n    const updateCliente = (id, updateCliente) => {\n        setEditing(false);\n\n        axios.put(`${SERVER}clientes/`+id, \n                 {\n                    cedula: updateCliente.cedula,\n                    direccion: updateCliente.direccion,\n                    email: updateCliente.email,\n                    fecha_nacimiento: \"2000-10-10\",\n                    idSecretario: 1,\n                    nombre: updateCliente.nombre,\n                    ocupacion:updateCliente.ocupacion,\n                    telefono: updateCliente.telefono\n\n            }\n      )\n      .then(function(res) {\n\n        listarClientes()\n    \n      })\n      .catch(function(err) {\n        console.log(err);\n      })\n        \n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Gestión Clientes</h1>\n                <div className=\"flex-row\">\n                    <div className=\"flex-large\">\n                        {\n                            editing ? (\n                                <div>\n                                    <h2>Editar Cliente</h2>\n                                    <EditClienteForm\n                                        updateCliente={updateCliente}\n                                        currentCliente={currentCliente} />\n                                </div>\n\n                            ) : (\n                                    <div>\n                                        <h2>Agregar Cliente</h2>\n                                        <AddClienteForm addCliente={addCliente} />\n                                    </div>\n                                )\n                        }\n\n\n\n                    </div>\n                    <div className=\"flex-large\">\n                        <h2>Clientes</h2>\n                        <ClienteTable\n                            clientes={clientes}\n                            deleteCliente={deleteCliente}\n                            editRow={editRow} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport {useForm} from 'react-hook-form'\n\nexport const AddTerapeutaForm = (props) => {\n\n    const {register,errors,handleSubmit} = useForm();\n\n    const onSubmit = (data,e) => {\n        props.addTerapeuta(data);\n        //limpiar campos\n        e.target.reset();\n    }\n\n    return (\n        <div>\n            <form onSubmit = {handleSubmit(onSubmit)}>\n                <label>Cedula</label>\n                <input type=\"text\" name=\"cedula\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                } />\n                <div>\n                    {errors?.cedula?.message}\n                </div>\n                <label>Clave</label>\n                <input type=\"text\" name=\"clave\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.clave?.message}\n                </div>\n\n                <label>Direccion</label>\n                <input type=\"text\" name=\"direccion\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.direccion?.message}\n                </div>\n\n                <label>Email</label>\n                <input type=\"text\" name=\"email\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.email?.message}\n                </div>\n\n                <label>Nombre</label>\n                <input type=\"text\" name=\"nombre\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.nombre?.message}\n                </div>\n\n                <label>Profesion</label>\n                <input type=\"text\" name=\"profesion\" ref={\n                    register({\n                        required:{value:true, message: 'Campo requerido'}\n                    })\n                }  />\n                <div>\n                    {errors?.profesion?.message}\n                </div>\n                <button>Agregar Terapeuta</button>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useForm } from 'react-hook-form'\n\nexport const EditTerapeuta = ({ updateTerapeuta, currentTerapeuta }) => {\n\n    const { register, errors, handleSubmit, setValue } = useForm({\n        defaultValues: currentTerapeuta\n    });\n\n\n    setValue('cedula', currentTerapeuta.cedula);\n    setValue('clave', currentTerapeuta.clave);\n    setValue('direccion', currentTerapeuta.direccion);\n    setValue('email', currentTerapeuta.email);\n    setValue('nombre', currentTerapeuta.nombre);\n    setValue('profesion', currentTerapeuta.profesion);\n\n    const onSubmit = (data, e) => {\n        updateTerapeuta(currentTerapeuta.id, data);\n        //limpiar campos\n        e.target.reset();\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n\n                <label>Cedula</label>\n                <input type=\"text\" name=\"cedula\" ref={\n                    register({\n                        required: { value: true, message: 'Campo requerido' }\n                    })\n                } />\n                <div>\n                    {errors?.cedula?.message}\n                </div>\n\n                <label>Clave</label>\n                <input type=\"text\" name=\"clave\" ref={\n                    register({\n                        required: { value: true, message: 'Campo requerido' }\n                    })\n                } />\n                <div>\n                    {errors?.clave?.message}\n                </div>\n\n                <label>Direccion</label>\n                <input type=\"text\" name=\"direccion\" ref={\n                    register({\n                        required: { value: true, message: 'Campo requerido' }\n                    })\n                } />\n                <div>\n                    {errors?.direccion?.message}\n                </div>\n\n                <label>Email</label>\n                <input type=\"text\" name=\"email\" ref={\n                    register({\n                        required: { value: true, message: 'Campo requerido' }\n                    })\n                } />\n                <div>\n                    {errors?.email?.message}\n                </div>\n\n                <label>Nombre</label>\n                <input type=\"text\" name=\"nombre\" ref={\n                    register({\n                        required: { value: true, message: 'Campo requerido' }\n                    })\n                } />\n                <div>\n                    {errors?.nombre?.message}\n                </div>\n\n                <label>Profesion</label>\n                <input type=\"text\" name=\"profesion\" ref={\n                    register({\n                        required: { value: true, message: 'Campo requerido' }\n                    })\n                } />\n                <div>\n                    {errors?.profesion?.message}\n                </div>\n\n        \n                <button>Editar Cliente</button>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const TerapeutaTable = ({ terapeutas,deleteTerapeuta,editRow }) => {\n    return (\n        <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Cedula</th>\n            <th>Clave</th>\n            <th>Direccion</th>\n            <th>Email</th>\n            <th>Nombre</th>\n            <th>Profesion</th>\n            <th>Acciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            terapeutas.length > 0 ? (\n                terapeutas.map(terapeuta => (\n\n                <tr key={terapeuta.id}>\n                  <td>{terapeuta.cedula}</td>\n                  <td>{terapeuta.clave}</td>\n                  <td>{terapeuta.direccion}</td>\n                  <td>{terapeuta.email}</td>\n                  <td>{terapeuta.nombre}</td>\n                  <td>{terapeuta.profesion}</td>\n                  <td>\n                    <button \n                      className=\"button muted-button\"\n                      onClick={() =>{editRow(terapeuta)}}\n                    >Editar</button>\n                    <button \n                      className=\"button muted-button\"\n                      onClick={() => {deleteTerapeuta(terapeuta.id)}}\n                    >\n                      Eliminar</button>\n                  </td>\n                </tr>\n\n              ))\n            ) : (\n                <tr>\n                  <td colSpan={3}>No users</td>\n                </tr>\n              )\n          }\n\n        </tbody>\n      </table>\n    </div>\n    )\n}\n","import React, { useState,useEffect } from 'react'\nimport { AddTerapeutaForm } from '../AddTerapeutaForm';\nimport { EditTerapeuta } from '../EditTerapeuta';\nimport { TerapeutaTable } from '../TerapeutaTable';\nimport {SERVER} from '../../server/Server'\nimport axios from 'axios';\n\nexport const TerapeutaScreen = () => {\n\n   \n\n    const [terapeutas, setTerapeutas] = useState([\n        { id: '',\n             cedula: '',\n             clave: '',\n             direccion: '',\n             email:'',\n             nombre: '',\n             profesion: '' }\n    ]);\n\n    useEffect(() => {\n        \n        listarTerapeutas();\n        \n    }, [])\n\n    //lista terapeutas\n    const listarTerapeutas = () => {\n\n        axios.get(`${SERVER}terapeutas`)\n        .then(res => {\n\n            setTerapeutas(res.data);\n            \n            \n        })\n\n    }\n\n    //agregar terapeuta\n    const addTerapeuta = (terapeuta) => {\n\n        axios.post(`${SERVER}terapeutas`, \n                 {\n                    cedula: terapeuta.cedula,\n                    clave: terapeuta.clave,\n                    direccion: terapeuta.direccion,\n                    email: terapeuta.email,\n                    nombre: terapeuta.nombre,\n                    profesion:terapeuta.profesion,\n            }\n      )\n      .then(function(res) {\n\n        listarTerapeutas();\n    \n      })\n      .catch(function(err) {\n        console.log(err);\n      })\n        \n    }\n\n    //Eliminar terapeuta\n    const deleteTerapeuta = id => {\n\n        axios.delete(`${SERVER}terapeutas/`+id, \n            \n        )\n        .then(function(res) {\n          \n          listarTerapeutas();\n          \n  \n        })\n        .catch(function(err) {\n          console.log(err);\n        })\n     \n    }\n\n    //Editar terapeutas\n    const [editing, setEditing] = useState(false);\n    const [currentTerapeuta, setCurrentTerapeuta] = useState({\n        id: null, cedula: '', clave: '', direccion: '', email: '', nombre: '', profesion: ''\n    });\n\n    const editRow = (terapeuta) => {\n        setEditing(true);\n        setCurrentTerapeuta({\n            id: terapeuta.id, cedula: terapeuta.cedula, clave: terapeuta.clave, direccion: terapeuta.direccion,nombre: terapeuta.nombre,email: terapeuta.email, profesion: terapeuta.profesion \n        })\n    }\n\n    const updateTerapeuta = (id, updateTerapeuta) => {\n\n        axios.put(`${SERVER}terapeuta/`+id, \n                 {\n                    cedula: updateTerapeuta.cedula,\n                    clave: updateTerapeuta.clave,\n                    direccion: updateTerapeuta.direccion,\n                    email: updateTerapeuta.email,\n                    nombre: updateTerapeuta.nombre,\n                    profesion:updateTerapeuta.profesion,\n\n            }\n      )\n      .then(function(res) {\n\n        listarTerapeutas();\n    \n      })\n      .catch(function(err) {\n        console.log(err);\n      })\n        setEditing(false);\n        \n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Gestión Terapeutas</h1>\n                <div className=\"flex-row\">\n                    <div className=\"flex-large\">\n                        {\n                            editing ? (\n                                <div>\n                                    <h2>Editar Terapeuta</h2>\n                                    <EditTerapeuta\n                                        updateTerapeuta={updateTerapeuta}\n                                        currentTerapeuta={currentTerapeuta} />\n                                </div>\n\n                            ) : (\n                                    <div>\n                                        <h2>Agregar Terapeuta</h2>\n                                        <AddTerapeutaForm addTerapeuta={addTerapeuta} />\n                                    </div>\n                                )\n                        }\n\n\n\n                    </div>\n                    <div className=\"flex-large\">\n                        <h2>Terapeutas</h2>\n                        <TerapeutaTable\n                            terapeutas={terapeutas}\n                            deleteTerapeuta={deleteTerapeuta}\n                            editRow={editRow} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const TarjetaClienteDatos = ({ cliente,mostrarCliente }) => {\n\n    const handleOnclickCliente = () =>{\n        mostrarCliente(cliente);\n    }\n\n    \n\n    return (\n        <>\n            <div className=\"card bg-light mb-3\" >\n                <div className=\"card-header\">Cliente</div>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{\"Nombre: \"+cliente.nombre}</h5>\n                    <h5 className=\"card-title\">{\"Cedula: \"+cliente.cedula}</h5>\n                    <h5 className=\"card-title\">{\"Telefono: \"+cliente.telefono}</h5>\n                    \n                    <button className=\"btn btn-primary\" onClick={handleOnclickCliente}>Ver Cliente</button>\n                </div>\n            </div>\n\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { TarjetaClienteDatos } from './TarjetaClienteDatos';\nimport axios from 'axios';\nimport {SERVER} from '../server/Server'\n\n\n\nexport const GestionClientes = () => {\n\n\n    const [clientes, setClientes] = useState([\n        {\n            id: '',\n            cedula: '',\n            direccion: '',\n            email: '',\n            nombre: '',\n            ocupacion: '',\n            telefono: '',\n            fechaNacimiento: ''\n        }\n    ]);\n\n    const [citas, setCitas] = useState([\n        {\n            idCita: '',\n            nombreTerapia: '',\n            nombreProfesional: '',\n            fechaInicial: '',\n            horaInicio: ''\n        }\n    ]);\n\n    const [clienteActual, setClienteActual] = useState(\n        {\n            id: '',\n            cedula: '',\n            direccion: '',\n            email: '',\n            nombre: '',\n            ocupacion: '',\n            telefono: '',\n            fechaNacimiento: ''\n        }\n    );\n\n\n\n    const [visualDatos, setVisuaalDatos] = useState(false);\n\n    useEffect(() => {\n\n        const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n\n        axios.get(`${SERVER}terapeutas/clientes/` + usuario.id)\n            .then(res => {\n\n                setClientes(res.data);\n\n\n            })\n\n    }, [])\n\n    const mostrarCliente = (cliente) => {\n\n        \n        setClienteActual(cliente);\n        obtenerCitas(cliente.id);\n        setVisuaalDatos(true);\n\n\n    }\n\n    const obtenerCitas = (id) => {\n\n        axios.get(`${SERVER}citas/cleinte/` + id)\n            .then(res => {\n                console.log(res.data);\n\n                setCitas(res.data);\n\n\n            })\n\n    }\n\n\n\n    return (\n        <>\n            <div>\n                <div className=\"container\">\n                    <h1>Gestión Clientes</h1>\n                    <div className=\"flex-row\">\n                        <div className=\"flex-large\">\n\n                            {\n                                clientes.length > 0 ? (\n                                    clientes.map((cliente) => {\n                                        return <TarjetaClienteDatos key={cliente.id} cliente={cliente} mostrarCliente={mostrarCliente} />\n                                    })\n                                ) : (\n                                       <h1>No tiene clientes asociados</h1>\n                                    )\n                                \n                            }\n\n                        </div>\n                        <div className=\"flex-large\">\n                            {\n                                visualDatos ? (\n\n                                    <div>\n                                        <ul className=\"list-group\">\n                                            <li className=\"list-group-item\">{\"Nombre: \" + clienteActual.nombre}</li>\n                                            <li className=\"list-group-item\">{\"Cedula: \" + clienteActual.cedula}</li>\n                                            <li className=\"list-group-item\">{\"Fecha Nacimiento:: \" + clienteActual.fechaNacimiento}</li>\n                                            <li className=\"list-group-item\">{\"Direccion: \" + clienteActual.direccion}</li>\n                                            <li className=\"list-group-item\">{\"Email: \" + clienteActual.email}</li>\n                                            <li className=\"list-group-item\">{\"Ocupacion: \" + clienteActual.ocupacion}</li>\n                                            <li className=\"list-group-item\">{\"Telefono: \" + clienteActual.telefono}</li>\n                                        </ul>\n                                        <br />\n                                        <br />\n\n\n                                        <table class=\"table\">\n                                            <thead class=\"thead-dark\">\n                                                <tr>\n                                                    <th scope=\"col\">#</th>\n                                                    <th scope=\"col\">Terapia</th>\n                                                    <th scope=\"col\">Terapeuta</th>\n                                                    <th scope=\"col\">Fecha</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    citas.map((cita,index) => {\n                                                        return (<tr>\n                                                            <th scope=\"row\">{1+index}</th>\n                                                            <td>{cita.nombreTerapia}</td>\n                                                            <td>{cita.nombreProfesional}</td>\n                                                            <td>{cita.fechaInicial+\" \"+cita.horaInicio}</td>\n                                                        </tr>\n                                                        )\n\n                                                    })\n                                                }\n\n                                            </tbody>\n                                        </table>\n                                    </div>\n                                ) : (\n                                        <div></div>\n\n                                    )\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n}\n","import React from 'react'\n\nexport const TarjetaCita = ({cita,mostrarCita}) => {\n\n    const handleOnClick = () =>{\n        mostrarCita(cita);\n    }\n    \n    return (\n        <div>\n            <div className=\"card bg-light mb-3\" >\n                <div className=\"card-header\">Cita</div>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{cita.nombreCliente}</h5>\n                    <p className=\"card-title\">{\"Fecha Inicio: \"+cita.fechaInicial+\" \"+cita.horaInicio}</p>\n                    <p className=\"card-title\">{\"Fecha Final: \"+cita.fechaFinal+\" \"+cita.horaFinal}</p>\n                    \n                    <button className=\"btn btn-primary\" onClick={handleOnClick}>Ver Cita</button>\n                </div>\n            </div>\n\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport const TarjetaObservacion = ({ observacion }) => {\n    return (\n        <div className=\"card text-white bg-secondary mb-10\" >\n                <div className=\"card-header\">Observacion</div>\n                <div className=\"card-body\">\n                    {/* <h5 className=\"card-title\">Success card title</h5> */}\n                <p className=\"card-text\">{observacion.observacion}</p>\n                </div>\n                \n\n            </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { TarjetaCita } from './TarjetaCita';\nimport axios from 'axios';\nimport { TarjetaObservacion } from './TarjetaObservacion';\nimport {SERVER} from '../server/Server'\n\n\nexport const GestionSesiones = () => {\n\n\n    const [citas, setCitas] = useState([\n        {\n            idCita: '',\n            nonmbreCliente: '',\n            fechaInicial: '',\n            horaInicio: '',\n            fechaFinal: '',\n            horaFinal: ''\n        }\n    ]);\n\n    const [observaciones, setObservaciones] = useState([\n        {\n            observacion: '',\n\n        }\n    ]);\n\n    const [citaActual, setCitaActual] = useState(\n        {\n            idCita: '',\n            nonmbreCliente: '',\n            fechaInicial: '',\n            horaInicio: '',\n            fechaFinal: '',\n            horaFinal: ''\n        }\n    );\n\n    const [value, setValues] = useState(\n        {\n            observacion: '',\n\n        }\n    );\n\n    const [visualObservaciones, setVisualObservaciones] = useState(false);\n\n    const handleValues = (e) => {\n\n        setValues({\n            ...value,\n            [e.target.name]: e.target.value\n        });\n\n    }\n\n    useEffect(() => {\n\n        const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n        axios.get(`${SERVER}citas/terapeuta/` + usuario.id,)\n            .then(res => {\n                setCitas(res.data);\n\n            })\n\n    }, [])\n\n    const mostrarCita = (cita) => {\n\n\n        setCitaActual(cita);\n        listarObservaciones(cita.idCita);\n        setVisualObservaciones(true);\n\n    }\n\n    const listarObservaciones = (idCita) => {\n\n        axios.get(`${SERVER}citas/observaciones/` + idCita)\n            .then(res => {\n\n\n                setObservaciones(res.data);\n\n\n            })\n    }\n\n    const onSubmitObservacion = (e) => {\n\n\n        e.preventDefault();\n\n        const usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n        axios.post(`${SERVER}cita/observacion`,\n            {\n                idCita: citaActual.idCita,\n                idTerapeuta: usuario.id,\n                observacion: value.observacion\n\n            }\n        )\n            .then(function (res) {\n\n                listarObservaciones(citaActual.idCita);\n                setValues({\n                    observacion: ''\n                })\n\n            })\n            .catch(function (err) {\n                console.log(err);\n            })\n\n\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n\n            <h1>Gestión Sesiones</h1>\n                <div className=\"flex-row\">\n                    <div className=\"flex-large\">\n                        {\n\n                            citas.length > 0 ? (\n                                citas.map((cita) => {\n                                    return <TarjetaCita key={cita.idCita} cita={cita} mostrarCita={mostrarCita} />\n                                })\n                            ) : (\n                                   <h1>No tiene citas</h1>\n                                )\n\n                        }\n\n\n                    </div>\n                    <div className=\"flex-large\">\n\n                        {\n                            visualObservaciones ? (\n\n                                <div>\n                                    {\n                                        observaciones.map((observacion) => {\n                                            return <TarjetaObservacion observacion={observacion} />\n                                        })\n                                    }\n\n\n                                    <form onSubmit={onSubmitObservacion}>\n\n                                        <input type=\"text\"\n                                            name=\"observacion\"\n                                            placeholder=\"Ingrese observación\"\n                                            onChange={handleValues}\n                                            value={value.observacion} />\n\n                                        <button type=\"submit\">Agregar</button>\n                                    </form>\n                                </div>\n\n\n                            ) : (\n                                    <div></div>\n\n                                )\n                        }\n\n\n\n\n\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\n\nexport const Navbar = () => {\n\n    const usuario = JSON.parse(localStorage.getItem(\"usuario\"))\n\n    const isSecretario = () => {\n        console.log(usuario)\n        if(usuario.identificador == \"1\"){\n            return true;\n        }\n        \n    }\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            \n        \n            <div className=\"navbar-collapse\">\n                <div className=\"navbar-nav\">\n\n\n                    {\n                        isSecretario() ? (\n\n                            <div className=\"navbar-nav\">\n\n                        <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link\" \n                            exact\n                            to=\"/terapeuta\"\n                        >\n                            Gestión Terapeuta\n                            \n                        </NavLink>\n    \n                        <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link\" \n                            exact\n                            to=\"/cliente\"\n                        >\n                            Gestión Cliente\n                        </NavLink>\n    \n                        <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link\" \n                            exact\n                            to=\"/agendarcitas\"\n                        >\n                            Agendar Citas\n                            \n                        </NavLink>\n\n                        <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link\" \n                            exact\n                            to=\"/asignarterapia\"\n                        >\n                            Asignar Terapia\n                            \n                        </NavLink>\n\n                        <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link\" \n                            exact\n                            to=\"/cobrarcitas\"\n                        >\n                            Cobrar Citas\n                            \n                        </NavLink>\n\n                            </div>\n                        \n\n                            ) : (\n                                    <div className=\"navbar-nav\">\n\n                            <NavLink \n                                         activeClassName=\"active\"\n                                        className=\"nav-item nav-link\" \n                                        exact\n                                        to=\"/gestionsesiones\"\n                                    >\n                                    Gestion Sesiones\n                        \n                                </NavLink>\n\n                                <NavLink \n                                         activeClassName=\"active\"\n                                        className=\"nav-item nav-link\" \n                                        exact\n                                        to=\"/gestionclientes\"\n                                    >\n                                    Gestion Clientes\n                        \n                                </NavLink>\n\n                                    </div>\n\n                                )\n                    }\n                    \n                    \n                    \n\n                    \n\n                    \n                </div>\n            </div>\n\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <NavLink \n                        activeClassName=\"active\"\n                        className=\"nav-item nav-link\" \n                        exact\n                        to=\"/login\"\n                    >\n                        Cerrar sesion\n                    </NavLink>\n                </ul>\n            </div>\n        </nav>\n    )\n}","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { AgendarCita } from '../components/AgendarCita'\nimport { AsignarTerapia } from '../components/AsignarTerapia'\nimport { CobrarCitas } from '../components/CobrarCitas'\nimport { ClienteScreen } from '../components/crud/ClienteScreen'\nimport { TerapeutaScreen } from '../components/crud/TerapeutaScreen'\nimport { GestionClientes } from '../components/GestionClientes'\nimport { GestionSesiones } from '../components/GestionSesiones'\nimport { Navbar } from '../components/ui/NavBar'\n\nexport const DashboarRoutes = () => {\n    return (\n        <>\n            <Navbar/>\n            <div>\n                <Switch>\n                    <Route exact path = \"/terapeuta\" component ={TerapeutaScreen}/>\n                    <Route exact path = \"/cliente\" component = {ClienteScreen}/>\n                    <Route exact path = \"/agendarcitas\" component = {AgendarCita}/>\n                    <Route exact path = \"/gestionsesiones\" component = {GestionSesiones}/>\n                    <Route exact path = \"/gestionclientes\" component = {GestionClientes}/>\n                    <Route exact path = \"/cobrarcitas\" component = {CobrarCitas}/>\n                    <Route exact path = \"/asignarterapia\" component = {AsignarTerapia}/>\n                </Switch>\n\n            </div>\n\n\n            \n        </>\n    )\n}\n","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\";\nimport { LoginScreen } from '../components/LoginScreen';\nimport { DashboarRoutes } from './DashboarRoutes';\n\nexport const AppRouter = () => {\n    return (\n        <Router>\n      <div>\n        \n\n  \n        <Switch>\n          \n          <Route  exact path=\"/login\" component={LoginScreen}/>\n          <Route   path=\"/\" component={DashboarRoutes}/>\n        </Switch>\n      </div>\n    </Router>\n    )\n}\n\n","import React from 'react'\nimport { AppRouter } from './routers/AppRouter'\n\nexport const MasterApp = () => {\n    return (\n        <AppRouter/>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MasterApp } from './MasterApp';\n\n\n\nReactDOM.render(\n\n    <MasterApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}